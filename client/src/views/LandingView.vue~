<script>
import axios from 'axios'

import LandingHeader from '../components/headers/LandingHeader.vue'
import GoalContainer from '../components/goals/GoalContainer.vue'

import GoalHeader from '../components/headers/GoalHeader.vue'

import { RouterView } from 'vue-router'
import GoalDetailView from './GoalDetailView.vue'



export default {
    name: 'LandingView',
    components:{
        LandingHeader,
        GoalHeader,
        GoalContainer,
        GoalDetailView

    },
    data() {
        return {
            user: {},
            userLoading: true,
            goals:[],
            goalsLoading: true,
            auth:undefined
        }
    },
    methods : {
        checkLogin(){
            this.auth = localStorage.getItem('token')
            return this.auth!=undefined;
        },
        openGoal(goalid){
            this.$router.push({name:'goal', params:{ goalid }})
        },
        getUserInfo(userid){ // probably gonna be replaced with TOKEN
            this.userLoading = true; 
            if(!this.checkLogin()){
                this.$toast.add({severity:'error', summary: 'Authentication Expired', detail:'Please login again', life: 2000});
                this.$router.push({name:'home'})
                return;
            }
            axios.get(`http://localhost:5000/user/${userid}`,
                {
                    headers:{Authorization: `Bearer ${this.auth}`}
                })
                .then((res) => {
                    console.log(res)
                    let data = res.data; // FIXME see Trello
                    this.userLoading = false; 
                    this.user = data;
                    this.getGoals(this.user._id);
                })
                .catch((err) => {
                    console.log(err)
                });
        },
        getGoals(userid){
            if(!this.checkLogin()){
                this.$toast.add({severity:'error', summary: 'Authentication Expired', detail:'Please login again', life: 2000});
                this.$router.push({name:'home'})
                return;
            }
            this.goalsLoading = true;
            axios.get(`http://localhost:5000/goal/employee/${userid}`, 
                {
                    headers:{Authorization: `Bearer ${this.auth}`}
                })
                .then((res) => {
                    this.goalsLoading = false;
                    this.goals = res.data;
                })
                .catch((err) => console.log(err));
        },
        logOut(){
            localStorage.removeItem('token')
            this.auth = undefined
            this.$router.push({name:'home'})
            this.$toast.add({severity:'success', summary: 'Logout Success', detail:'', life: 1000});
        },
	handleManagerMode(event){
		if(event){
			this.employeeGoals = [];
			this.promiseArray = [];
			axios.get(`http://localhost:5000/user/manager/listEmployees/${this.user.employeeId}/${this.user.companyId}`)
		     	     .then((res) => {
			        for(let i = 0; i < res.data.length; i++){
					this.promiseArray.push(axios.get(`http://localhost:5000/goal/employee/${res.data[i]._id}`));
				}
				Promise.all(this.promiseArray).then((values) => {
							  	for(let i = 0; i < values.length; i++){
									this.employeeGoals.concat(values[i]);
							  	}})
						      	      .catch((err) => console.log(err));
		     	     })
		             .catch((err) => console.log(err));
		        this.goals = this.employeeGoals;
		}
		else{
		   this.goals = this.getGoals(this.user._id);
		}
       }},
    mounted(){
        this.checkLogin();
        this.getUserInfo(this.$route.params.userid);
    },
    // A really bootleg way to check to see if we are on landing view
    watch: {
        $route(){
            if(this.$route.params.goalid==undefined){
                this.getGoals(this.user._id);
            }
        }
    }

    
}
</script>

<template>
    <div id="landing-page">
        <LandingHeader
	    @manager-mode='handleManagerMode' 
            @myclicked='changemanagerState'
            :first-name="this.user.firstName"
            :last-name="this.user.lastName"
            :email="this.user.email"
            :position-title="this.user.positionTitle"
            :is-manager="this.user.isManager"
            :log-out = "this.logOut"
            class="bg-primary"
        />

        <GoalHeader @saveGoal="this.getGoals(this.user._id)"/>

        <GoalContainer 
            :goals="this.goals"
            :openGoal="this.openGoal"/>
        <RouterView> </RouterView>

    </div>
</template>

<style scoped>
#landing-page{
    height: 100vh;
    display: flex;
    flex-direction: column;
}

</style>
